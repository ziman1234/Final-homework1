import matplotlib.pyplot as plt
import numpy as np

# summarize history for accuracy_rotation
plt.figure(figsize=(15,8), dpi=80)
rotate_train_acc=np.loadtxt("/Users/ziman/Desktop/resnet rotate/resNet18_rotation_train_acc.txt")
rotate_test_acc=np.loadtxt("/Users/ziman/Desktop/resnet rotate/resNet18_rotation_test_acc.txt")
plt.plot(rotate_train_acc)
plt.plot(rotate_test_acc)
plt.title('rotation-accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['train', 'test'], loc='upper left')
plt.tight_layout()
plt.savefig('/Users/ziman/Desktop/resnet rotate/answer/rotation_accuracy.png')
plt.show()
# summarize history for rotation_loss
plt.figure(figsize=(15,8), dpi=80)
rotate_train_loss=np.loadtxt("/Users/ziman/Desktop/resnet rotate/resNet18_rotation_train_loss.txt")
rotate_test_loss=np.loadtxt("/Users/ziman/Desktop/resnet rotate/resNet18_rotation_test_loss.txt")
plt.plot(rotate_train_loss)
plt.plot(rotate_test_loss)
plt.title('rotation-loss')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['train', 'test'], loc='upper left')
plt.tight_layout()
plt.savefig('/Users/ziman/Desktop/resnet rotate/answer/rotation_loss.png')
plt.show()

# summarize history for supervise_accuracy
plt.figure(figsize=(15,8), dpi=80)
supervise_train_acc=np.loadtxt("/Users/ziman/Desktop/resnet rotate/resNet18_supervise_train_acc.txt")
supervise_test_acc=np.loadtxt("/Users/ziman/Desktop/resnet rotate/resNet18_supervise_test_acc.txt")
plt.plot(supervise_train_acc)
plt.plot(supervise_test_acc)
plt.title('supervise-accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['train', 'test'], loc='upper left')
plt.tight_layout()
plt.savefig('/Users/ziman/Desktop/resnet rotate/answer/supervise_accuracy.png')
plt.show()
# summarize history for supervise_loss
plt.figure(figsize=(15,8), dpi=80)
supervise_train_loss=np.loadtxt("/Users/ziman/Desktop/resnet rotate/resNet18_supervise_train_loss.txt")
supervise_test_loss=np.loadtxt("/Users/ziman/Desktop/resnet rotate/resNet18_supervise_test_loss.txt")
plt.plot(supervise_train_loss)
plt.plot(supervise_test_loss)
plt.title('supervise-loss')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['train', 'test'], loc='upper left')
plt.tight_layout()
plt.savefig('/Users/ziman/Desktop/resnet rotate/answer/supervise_loss.png')
plt.show()

# summarize comparison for accuracy
plt.figure(figsize=(15,8), dpi=80)
supervise_test_acc=np.loadtxt("/Users/ziman/Desktop/resnet rotate/resNet18_supervise_test_acc.txt")
rotate_test_acc=np.loadtxt("/Users/ziman/Desktop/resnet rotate/resNet18_rotation_test_acc.txt")
plt.plot(supervise_test_acc)
plt.plot(rotate_test_acc)
plt.title('comparison-accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['supervise', 'rotation'], loc='upper left')
plt.tight_layout()
plt.savefig('/Users/ziman/Desktop/resnet rotate/answer/accuracy_comparison.png')
plt.show()
# summarize comparison for loss
plt.figure(figsize=(15,8), dpi=80)
supervise_test_acc=np.loadtxt("/Users/ziman/Desktop/resnet rotate/resNet18_supervise_test_loss.txt")
rotate_test_acc=np.loadtxt("/Users/ziman/Desktop/resnet rotate/resNet18_rotation_test_loss.txt")
plt.plot(supervise_test_loss)
plt.plot(rotate_test_loss)
plt.title('comparison-loss')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['supervise', 'rotation'], loc='upper left')
plt.tight_layout()
plt.savefig('/Users/ziman/Desktop/resnet rotate/answer/loss_comparison.png')
plt.show()